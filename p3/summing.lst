     1                                  ; Adrian Faircloth
     2                                  ; CSC 322 Fall 2020
     3                                  ; Program 3: Summing Arrays
     4                                  ; Sums three different arrays of signed integers and totals all three sums
     5                                  ; 09/27/2020
     6                                  
     7                                  SECTION .data
     8 00000000 FF02FD04FB06            bArray:        DB     	 -1,2,-3,4,-5,6
     9 00000006 09000A000B000C000D-     wArray:        DW        09h,0ah,0bh,0ch,0dh
    10 0000000F 00                 
    11 00000010 F6FFFFFFECFFFFFFE2-     dArray:        DD        -10,-20,-30,-40,-50
    12 00000019 FFFFFFD8FFFFFFCEFF-
    13 00000022 FFFF               
    14 00000024 00                      bArraySum:     DB        0
    15 00000025 0000                    wArraySum:     DW        0
    16 00000027 00000000                dArraySum:     DD        0
    17 0000002B 00000000                grandTotal:    DD        0
    18                                  
    19                                  
    20                                  SECTION .bss
    21                                  ; define uninitialized data here
    22                                  
    23                                  SECTION .text
    24                                  global _main
    25                                  _main:
    26                                  
    27                                  break0: ; break label before code
    28                                  
    29 00000000 A0[00000000]            	mov     al, [bArray] ; moving the first bArray value to the al register
    30 00000005 0205[01000000]          	add     al, [bArray+1] ; adding each byte within bArray to al
    31 0000000B 0205[02000000]          	add     al, [bArray+2]
    32 00000011 0205[03000000]          	add	al, [bArray+3]
    33 00000017 0205[04000000]          	add	al, [bArray+4]
    34 0000001D 0205[05000000]          	add	al, [bArray+5]
    35 00000023 A2[24000000]            	mov	[bArraySum], al ; moving the sum from al to bArraySum variable
    36                                  
    37                                  break1: ; break after summing first array
    38                                  
    39 00000028 6631C0                  	xor	ax, ax ; zeroing ax register
    40 0000002B 66A1[06000000]          	mov	ax, [wArray] ; moving first wArray value to the ax register
    41 00000031 660305[08000000]        	add	ax, [wArray+2] ; adding each word within wArray to ax
    42 00000038 660305[0A000000]        	add	ax, [wArray+4]
    43 0000003F 660305[0C000000]        	add	ax, [wArray+6]
    44 00000046 660305[0E000000]        	add	ax, [wArray+8]
    45 0000004D 66A3[25000000]          	mov	[wArraySum], ax ; moving the sum from ax to wArraySum
    46                                  
    47                                  break2: ; break after summing second array
    48                                  
    49 00000053 6631C0                  	xor	ax, ax ; zeroing ax register
    50 00000056 A1[10000000]            	mov	eax, [dArray] ; moving first dArray value to the eax register
    51 0000005B 0305[14000000]          	add	eax, [dArray+4] ; adding each double-word within dArray to eax
    52 00000061 0305[18000000]          	add	eax, [dArray+8]
    53 00000067 0305[1C000000]          	add	eax, [dArray+12]
    54 0000006D 0305[20000000]          	add	eax, [dArray+16]
    55 00000073 A3[27000000]            	mov	[dArraySum], eax ; moving sum from eax to dArraySum	
    56                                  
    57                                  break3: ; break after summing third array
    58                                  
    59 00000078 31C0                    	xor eax, eax ; zeroing eax register
    60 0000007A A1[27000000]            	mov eax, [dArraySum] ; moving dArraySum value into eax register
    61 0000007F 0205[24000000]          	add al, [bArraySum] ; adding dArraySum and bArraySum
    62 00000085 660305[25000000]        	add ax, [wArraySum] ; adding wArraySum to other sums
    63 0000008C A3[2B000000]            	mov [grandTotal], eax ; moving total sum to grandTotal
    64                                  
    65                                  lastBreak: ; break label just before termination
    66                                  
    67                                  ; Normal termination code
    68 00000091 B801000000              mov eax, 1
    69 00000096 BB00000000              mov ebx, 0
    70 0000009B CD80                    int 80h
    71                                              
