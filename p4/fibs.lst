     1                                  ; Adrian Faircloth
     2                                  ; CSC 322 Fall 2020
     3                                  ; 09/30/2020
     4                                  ; Program 4: Fibonacci Sequence
     5                                  ; Reserves an array and fills it with numbers of the Fibonacci sequence
     6                                  
     7                                  SECTION .data
     8                                  ; define data/variables here.  Think DB, DW, DD, DQ
     9                                  
    10                                  SECTION .bss
    11 00000000 <res 00000040>          Fibs:	RESD 16
    12                                  
    13                                  SECTION .text
    14                                  global _main
    15                                  _main:
    16 00000000 B800000000              	mov eax, 0 ; moving Fibonacci values into eax register and then into Fibs array
    17 00000005 A3[00000000]            	mov [Fibs] , eax
    18 0000000A B801000000              	mov eax, 1
    19 0000000F A3[04000000]            	mov [Fibs+4], eax	
    20 00000014 0305[00000000]          	add eax, [Fibs] ; adding first and second values of Fibs
    21 0000001A A3[08000000]            	mov [Fibs+8], eax ; moving sum of previous two fib values into Fibs array
    22 0000001F 0305[04000000]          	add eax, [Fibs+4] ; repeating for 16 fibonacci values
    23 00000025 A3[0C000000]            	mov [Fibs+12], eax
    24 0000002A 0305[08000000]          	add eax, [Fibs+8]
    25 00000030 A3[10000000]            	mov [Fibs+16], eax
    26 00000035 0305[0C000000]          	add eax, [Fibs+12]
    27 0000003B A3[14000000]            	mov [Fibs+20], eax
    28 00000040 0305[10000000]          	add eax, [Fibs+16]
    29 00000046 A3[18000000]            	mov [Fibs+24], eax
    30 0000004B 0305[14000000]          	add eax, [Fibs+20]
    31 00000051 A3[1C000000]            	mov [Fibs+28], eax
    32 00000056 0305[18000000]          	add eax, [Fibs+24]
    33 0000005C A3[20000000]            	mov [Fibs+32], eax
    34 00000061 0305[1C000000]          	add eax, [Fibs+28]
    35 00000067 A3[24000000]            	mov [Fibs+36], eax
    36 0000006C 0305[20000000]          	add eax, [Fibs+32]
    37 00000072 A3[28000000]            	mov [Fibs+40], eax
    38 00000077 0305[24000000]          	add eax, [Fibs+36]
    39 0000007D A3[2C000000]            	mov [Fibs+44], eax
    40 00000082 0305[28000000]          	add eax, [Fibs+40]
    41 00000088 A3[30000000]            	mov [Fibs+48], eax
    42 0000008D 0305[2C000000]          	add eax, [Fibs+44]
    43 00000093 A3[34000000]            	mov [Fibs+52], eax
    44 00000098 0305[30000000]          	add eax, [Fibs+48]
    45 0000009E A3[38000000]            	mov [Fibs+56], eax
    46 000000A3 0305[34000000]          	add eax, [Fibs+52]
    47 000000A9 A3[3C000000]            	mov [Fibs+60], eax	
    48                                  
    49                                  done: ; break after completing array
    50                                  ; Normal termination code
    51 000000AE B801000000              mov eax, 1
    52 000000B3 BB00000000              mov ebx, 0
    53 000000B8 CD80                    int 80h
    54                                              
